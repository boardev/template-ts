name: Publish Image & Package

permissions:
  contents: 'read'
  packages: 'write'

on:
  push:
    # tags:
    #   - 'v*'

defaults:
  run:
    shell: bash

env:
  CI: true
  # Enable debug logging for actions
  ACTIONS_RUNNER_DEBUG: true

jobs:
  test:
        # run only on 'main' branch
    if: github.ref == 'refs/heads/main'
    name: 'Lint, Type Check, Test, & Build'
    strategy:
      matrix:
        os: ['ubuntu-latest']
        node_version: ['lts/*']
        pnpm_version: ['latest']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnpm_version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: |
          pnpm format
          pnpm lint

      - name: Type Check
        run: pnpm typecheck

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build

  docker:
    # run only on 'main' branch
    if: github.ref == 'refs/heads/main'
    name: 'Publish Docker Image to Docker Hub and GitHub Container Registry'
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}
            ghcr.io/${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-npm:
    # run only on 'main' branch
    if: github.ref == 'refs/heads/main'
    name: 'Publish Package to npm Registry'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 'latest'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 'Publish'
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          pnpm publish --access public --registry https://registry.npmjs.org --no-git-checks

  publish-gpr:
    # run only on 'main' branch
    if: github.ref == 'refs/heads/main'
    name: 'Publish Package to GitHub Package Registry'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 'latest'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Update ~/.npmrc
        run: |
          echo "//npm.pkg.github.com:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc

      - name: 'Publish'
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pnpm publish --access public --registry https://npm.pkg.github.com --no-git-checks

  # Generate GitHub Release Changelog
  Changelog:
    # make sure tags have been pushed
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Generate Changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx changelogithub
